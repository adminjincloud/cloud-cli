#compdef melanite

_melanite() {
    local curcontext="$curcontext" state line
	  typeset -A opt_args

    _arguments -C \
		           ':command:->command' \
		           '*::options:->options'

	  case $state in
		    (command)

			      local -a subcommands
			      subcommands=(
				        'list:List host info.'
				        'exec:Exec command to remote servers.'
				        'login:Login to remote server.'
				        'put:Transfer file to remote server.'
				        'get:Transfer file from remote server.'
				        'help:Print help info.'
			      )
			      _describe -t commands 'melanite' subcommands
		        ;;

		    (options)
			      case $line[1] in

				        (list)
                    __melanite_list
					          ;;

					      (exec)
                    __melanite_exec
					          ;;

					      (login)
                    __melanite_login
					          ;;

					      (put)
                    __melanite_put
					          ;;

					      (get)
                    __melanite_get
					          ;;

					      (help)
                    __melanite_help
					          ;;
			      esac
		        ;;
	  esac
}

__melanite_help() {
    _arguments -C \
		           ':command:->command'

	  case $state in
		    (command)

			      local -a subcommands
			      subcommands=(
				        'list:List subcommand.'
				        'exec:Exec subcommand.'
				        'login:Login subcommand.'
				        'put:Put subcommand.'
				        'get:Get subcommand.'
			      )
			      _describe -t commands 'melanite help' subcommands
		        ;;
    esac

}


__melanite_list() {

		_arguments -C -s -S \
				       '-n[remote node name]:node name:__generate_nodes' \
				       '--node[remote node name]:node name:__generate_nodes' \
               '-g[group name]:group name:__generate_groups' \
               '--group[group name]:group name:__generate_groups' \
				       {'-a','--all'}'[display detail info]::'

}

__melanite_exec() {

		_arguments -C -s -S \
				       '-n[remote node name]:node name:__generate_nodes' \
				       '--node[remote node name]:node name:__generate_nodes' \
               '-g[group name]:group name:__generate_groups' \
               '--group[group name]:group name:__generate_groups' \
				       {'-u','--user'}'[user who exec the command]::' \
				       {'-y','--yes'}'[is confirm before excute command?]::' \
				       {'-c','--cmd'}'[command for exec]::'

}

__melanite_login() {

		_arguments -C -s -S \
				       '-n[remote node name]:node name:__generate_nodes' \
				       '--node[remote node name]:node name:__generate_nodes' \
               '-g[group name]:group name:__generate_groups' \
               '--group[group name]:group name:__generate_groups'

}

__melanite_put() {

		_arguments -C -s -S \
				       '-n[remote node name]:node name:__generate_nodes' \
				       '--node[remote node name]:node name:__generate_nodes' \
               '-g[group name]:group name:__generate_groups' \
               '--group[group name]:group name:__generate_groups' \
				       {'-u','--user'}'[user who exec the command]::' \
				       {'-y','--yes'}'[is confirm before excute command?]::' \
				       '--src[source file or directory]:file path:_files' \
				       '--dst[destination *directory*]:file path:_files'

}

__melanite_get() {

		_arguments -C -s -S \
				       '-n[remote node name]:node name:__generate_nodes' \
				       '--node[remote node name]:node name:__generate_nodes' \
               '-g[group name]:group name:__generate_groups' \
               '--group[group name]:group name:__generate_groups' \
				       {'-u','--user'}'[user who exec the command]::' \
				       {'-y','--yes'}'[is confirm before excute command?]::' \
				       '--src[source file or directory]:file path:_files' \
				       '--dst[destination *directory*]:file path:_files'

}

__generate_nodes() {
    local expl
    nodes=( `melanite get -n --generate-bash-completion` )

    _wanted nodes expl node compadd $* - $nodes
}

__generate_groups() {
    local expl
    groups=( `melanite get -g --generate-bash-completion` )

    _wanted groups expl group compadd $* - $groups
}

_melanite "$@"

